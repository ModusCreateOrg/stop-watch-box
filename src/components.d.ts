/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface StopWatchBox {
    'applyHover': boolean;
  }
  interface StopWatchBoxAttributes extends StencilHTMLAttributes {
    'applyHover'?: boolean;
  }

  interface StopWatch {
    'applyHover': boolean;
    'hours': string;
    'milliseconds': string;
    'minutes': string;
    'seconds': string;
  }
  interface StopWatchAttributes extends StencilHTMLAttributes {
    'applyHover'?: boolean;
    'hours'?: string;
    'milliseconds'?: string;
    'minutes'?: string;
    'seconds'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'StopWatchBox': Components.StopWatchBox;
    'StopWatch': Components.StopWatch;
  }

  interface StencilIntrinsicElements {
    'stop-watch-box': Components.StopWatchBoxAttributes;
    'stop-watch': Components.StopWatchAttributes;
  }


  interface HTMLStopWatchBoxElement extends Components.StopWatchBox, HTMLStencilElement {}
  var HTMLStopWatchBoxElement: {
    prototype: HTMLStopWatchBoxElement;
    new (): HTMLStopWatchBoxElement;
  };

  interface HTMLStopWatchElement extends Components.StopWatch, HTMLStencilElement {}
  var HTMLStopWatchElement: {
    prototype: HTMLStopWatchElement;
    new (): HTMLStopWatchElement;
  };

  interface HTMLElementTagNameMap {
    'stop-watch-box': HTMLStopWatchBoxElement
    'stop-watch': HTMLStopWatchElement
  }

  interface ElementTagNameMap {
    'stop-watch-box': HTMLStopWatchBoxElement;
    'stop-watch': HTMLStopWatchElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
