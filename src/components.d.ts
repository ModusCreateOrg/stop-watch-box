/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  StopWatchBoxComponent as StopWatchBox
} from './components/stop-watch-box/stop-watch-box';

declare global {
  interface HTMLStopWatchBoxElement extends StopWatchBox, HTMLStencilElement {
  }
  var HTMLStopWatchBoxElement: {
    prototype: HTMLStopWatchBoxElement;
    new (): HTMLStopWatchBoxElement;
  };
  interface HTMLElementTagNameMap {
    "stop-watch-box": HTMLStopWatchBoxElement;
  }
  interface ElementTagNameMap {
    "stop-watch-box": HTMLStopWatchBoxElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "stop-watch-box": JSXElements.StopWatchBoxAttributes;
    }
  }
  namespace JSXElements {
    export interface StopWatchBoxAttributes extends HTMLAttributes {
      applyHover?: boolean;
    }
  }
}


import {
  StopWatchComponent as StopWatch
} from './components/stop-watch/stop-watch';

declare global {
  interface HTMLStopWatchElement extends StopWatch, HTMLStencilElement {
  }
  var HTMLStopWatchElement: {
    prototype: HTMLStopWatchElement;
    new (): HTMLStopWatchElement;
  };
  interface HTMLElementTagNameMap {
    "stop-watch": HTMLStopWatchElement;
  }
  interface ElementTagNameMap {
    "stop-watch": HTMLStopWatchElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "stop-watch": JSXElements.StopWatchAttributes;
    }
  }
  namespace JSXElements {
    export interface StopWatchAttributes extends HTMLAttributes {
      applyHover?: boolean;
      hours?: string;
      milliseconds?: string;
      minutes?: string;
      seconds?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
